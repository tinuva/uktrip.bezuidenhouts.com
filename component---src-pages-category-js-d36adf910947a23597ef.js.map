{"version":3,"sources":["webpack:///./src/components/Article/Article.js","webpack:///./src/components/List/List.js","webpack:///./src/pages/category.js","webpack:///./src/components/Article/Headline.js"],"names":["Article","props","children","theme","Fragment","space","inset","default","text","maxWidth","tablet","desktop","List","edges","stack","m","xs","font","size","s","lineHeight","l","map","edge","node","title","frontmatter","slug","fields","key","to","CategoryPage","posts","data","categories","forEach","category","push","categoryList","Consumer","color","brand","primary","item","Headline","xxl","time","duration","long","weight","standard","xl"],"mappings":"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","file":"component---src-pages-category-js-d36adf910947a23597ef.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Article = props => {\n  const { children, theme } = props;\n\n  return (\n    <React.Fragment>\n      <article className=\"article\">{children}</article>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .article {\n          padding: ${theme.space.inset.default};\n          margin: 0 auto;\n        }\n        @from-width tablet {\n          .article {\n            padding: ${`calc(${theme.space.default}) calc(${theme.space.default} * 2)`};\n            max-width: ${theme.text.maxWidth.tablet};\n          }\n        }\n        @from-width desktop {\n          .article {\n            padding: ${`calc(${theme.space.default} * 2 + 90px) 0 calc(${\n              theme.space.default\n            } * 2)`};\n            max-width: ${theme.text.maxWidth.desktop};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Article;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst List = props => {\n  const { edges, theme } = props;\n\n  return (\n    <React.Fragment>\n      <ul>\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        ul {\n          margin: ${theme.space.stack.m};\n          padding: ${theme.space.m};\n          list-style: circle;\n        }\n        li {\n          padding: ${theme.space.xs} 0;\n          font-size: ${theme.font.size.s};\n          line-height: ${theme.font.lineHeight.l};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default List;\n","import { FaTag } from \"react-icons/fa/\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article/\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\nimport Seo from \"../components/Seo\";\n\nconst CategoryPage = props => {\n  const {\n    data: {\n      posts: { edges: posts }\n    }\n  } = props;\n\n  // Create category list\n  const categories = {};\n  posts.forEach(edge => {\n    const {\n      node: {\n        frontmatter: { category }\n      }\n    } = edge;\n\n    if (category && category != null) {\n      if (!categories[category]) {\n        categories[category] = [];\n      }\n      categories[category].push(edge);\n    }\n  });\n\n  const categoryList = [];\n\n  for (var key in categories) {\n    categoryList.push([key, categories[key]]);\n  }\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <header>\n              <Headline title=\"Posts by categories\" theme={theme} />\n            </header>\n            {categoryList.map(item => (\n              <section key={item[0]}>\n                <h2>\n                  <FaTag /> {item[0]}\n                </h2>\n                <List edges={item[1]} theme={theme} />\n              </section>\n            ))}\n            {/* --- STYLES --- */}\n            <style jsx>{`\n              h2 {\n                margin: 0 0 0.5em;\n              }\n              h2 :global(svg) {\n                height: 0.8em;\n                fill: ${theme.color.brand.primary};\n              }\n            `}</style>\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo />\n    </React.Fragment>\n  );\n};\n\nCategoryPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default CategoryPage;\n\n//eslint-disable-next-line no-undef\nexport const query = graphql`\n  query PostsQuery {\n    posts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//posts/[0-9]+.*--/\" } }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n          }\n          frontmatter {\n            title\n            category\n            author\n            cover {\n              children {\n                ... on ImageSharp {\n                  fluid(maxWidth: 800, maxHeight: 360) {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Headline = props => {\n  const { title, children, theme } = props;\n\n  return (\n    <React.Fragment>\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        h1 {\n          font-size: ${theme.font.size.xxl};\n          margin: ${theme.space.stack.l};\n          animation-name: headlineEntry;\n          animation-duration: ${theme.time.duration.long};\n\n          :global(span) {\n            font-weight: ${theme.font.weight.standard};\n            display: block;\n            font-size: 0.5em;\n            letter-spacing: 0;\n            margin: ${theme.space.stack.xs};\n          }\n\n          :global(svg) {\n            height: 0.75em;\n            fill: ${theme.color.brand.primary};\n          }\n        }\n\n        @keyframes headlineEntry {\n          from {\n            opacity: 0.5;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\n          }\n        }\n\n        @from-width desktop {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Headline;\n"],"sourceRoot":""}