{"version":3,"sources":["webpack:///./src/components/Article/Article.js","webpack:///./src/components/List/List.js","webpack:///./src/components/Article/Headline.js","webpack:///./src/templates/CategoryTemplate.js"],"names":["Article","props","children","theme","Fragment","space","inset","default","text","maxWidth","tablet","desktop","List","edges","stack","m","xs","font","size","s","lineHeight","l","map","edge","node","title","frontmatter","slug","fields","key","to","Headline","xxl","time","duration","long","weight","standard","color","brand","primary","xl","CategoryTemplate","category","pageContext","data","allMarkdownRemark","totalCount","Consumer","className"],"mappings":"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","file":"component---src-templates-category-template-js-891d4e84c44d2868a10d.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Article = props => {\n  const { children, theme } = props;\n\n  return (\n    <React.Fragment>\n      <article className=\"article\">{children}</article>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .article {\n          padding: ${theme.space.inset.default};\n          margin: 0 auto;\n        }\n        @from-width tablet {\n          .article {\n            padding: ${`calc(${theme.space.default}) calc(${theme.space.default} * 2)`};\n            max-width: ${theme.text.maxWidth.tablet};\n          }\n        }\n        @from-width desktop {\n          .article {\n            padding: ${`calc(${theme.space.default} * 2 + 90px) 0 calc(${\n              theme.space.default\n            } * 2)`};\n            max-width: ${theme.text.maxWidth.desktop};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Article;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst List = props => {\n  const { edges, theme } = props;\n\n  return (\n    <React.Fragment>\n      <ul>\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        ul {\n          margin: ${theme.space.stack.m};\n          padding: ${theme.space.m};\n          list-style: circle;\n        }\n        li {\n          padding: ${theme.space.xs} 0;\n          font-size: ${theme.font.size.s};\n          line-height: ${theme.font.lineHeight.l};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default List;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Headline = props => {\n  const { title, children, theme } = props;\n\n  return (\n    <React.Fragment>\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        h1 {\n          font-size: ${theme.font.size.xxl};\n          margin: ${theme.space.stack.l};\n          animation-name: headlineEntry;\n          animation-duration: ${theme.time.duration.long};\n\n          :global(span) {\n            font-weight: ${theme.font.weight.standard};\n            display: block;\n            font-size: 0.5em;\n            letter-spacing: 0;\n            margin: ${theme.space.stack.xs};\n          }\n\n          :global(svg) {\n            height: 0.75em;\n            fill: ${theme.color.brand.primary};\n          }\n        }\n\n        @keyframes headlineEntry {\n          from {\n            opacity: 0.5;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\n          }\n        }\n\n        @from-width desktop {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Headline;\n","import { FaTag } from \"react-icons/fa/\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Seo from \"../components/Seo\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\n\nconst CategoryTemplate = props => {\n  const {\n    pageContext: { category },\n    data: {\n      allMarkdownRemark: { totalCount, edges }\n    }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <header>\n              <Headline theme={theme}>\n                <span>Posts in category</span> <FaTag />\n                {category}\n              </Headline>\n              <p className=\"meta\">\n                There {totalCount > 1 ? \"are\" : \"is\"} <strong>{totalCount}</strong> post{totalCount >\n                1\n                  ? \"s\"\n                  : \"\"}{\" \"}\n                in the category.\n              </p>\n              <List edges={edges} theme={theme} />\n            </header>\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo />\n    </React.Fragment>\n  );\n};\n\nCategoryTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired\n};\n\nexport default CategoryTemplate;\n\n// eslint-disable-next-line no-undef\nexport const categoryQuery = graphql`\n  query PostsByCategory($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___prefix], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}